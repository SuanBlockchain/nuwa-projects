generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
//   output   = "erd.svg"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid()) @db.Uuid
  name     String?
  password String
  email    String  @unique
  role     Role    @default(GESTOR)
  projects Project[]
}

model MathModels {
  id          String  @id @default(uuid()) @db.Uuid
  name        String  @unique
}

model Species {
  id          String  @id @default(uuid()) @db.Uuid
  common_name        String  @unique
  scientific_name    String  @unique
  family             String?
  functional_type    String?
  values             Json
  comments           String?

  parcels Parcels[]
}

model Keyword {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @unique
  projectKeywords ProjectKeyword[]
}

model Ecosystem {
  id          String   @id @default(uuid()) @db.Uuid
  type        String  @unique
  description String?
  values      Json
  parcels     Parcels[]
}

model Project {
  id         String    @id @default(uuid()) @db.Uuid
  name       String    @unique
  title      String    @db.VarChar(255) 
  description   String?
  country    String?    @db.VarChar(255)
  status     Status    @default(Seed)
  department String?    @db.VarChar(255)
  keywords   ProjectKeyword[]
  values     Json?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  creatorId  String           @db.Uuid
  creator    User             @relation(fields: [creatorId], references: [id])
  parcels    Parcels[]
}

model ProjectKeyword {
  projectId String @db.Uuid
  keywordId String @db.Uuid
  keyword   Keyword @relation(fields: [keywordId], references: [id], onDelete: Cascade)
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@id([projectId, keywordId])
}

model Parcels {
  id          String  @id @default(uuid()) @db.Uuid
  name        String  @unique
  projectId   String?  @db.Uuid
  project Project? @relation(fields: [projectId], references: [id])
  ecosystemId String?  @db.Uuid
  ecosystem   Ecosystem? @relation(fields: [ecosystemId], references: [id])
  speciesId   String?  @db.Uuid
  species     Species? @relation(fields: [speciesId], references: [id])
  area Int
  municipality String?
  department String?
  cadastral_id String?
  geolocation Json?
  polygon Json?
}

enum Role {
  GESTOR
  ADMIN
}

enum Status {
  Seed
  InProgress
  Finished
  Canceled
}
