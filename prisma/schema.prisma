generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "erd.svg"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Units {
//   id          Int     @id @default(autoincrement())
//   name        String  @unique
//   symbol      String  @unique
//   unit_type   String
//   is_standard Boolean @default(false)

//   from_conversions UnitConversions[] @relation("FromUnit")
//   to_conversions   UnitConversions[] @relation("ToUnit")

//   Params Params[]
// }

// model UnitConversions {
//   id           Int     @id @default(autoincrement())
//   from_unit_id Int
//   to_unit_id   Int
//   factor       Float
//   offset       Float   @default(0.0)

//   from_unit    Units   @relation("FromUnit", fields: [from_unit_id], references: [id])
//   to_unit      Units   @relation("ToUnit", fields: [to_unit_id], references: [id])
// }

// model Params {
//   id          Int     @id @default(autoincrement())
//   name        String
//   description String?
//   unit        Units?  @relation(fields: [unitId], references: [id])
//   unitId      Int?
//   ecosystem   Ecosystem? @relation(fields: [ecosystemId], references: [id])
//   ecosystemId Int?
// }

model Ecosystem {
  id          Int     @id @default(autoincrement())
  Type        String  @unique
  description String?
  values      Json
}

model Keyword {
  id              String @id @default(uuid()) @db.Uuid
  name            String           @unique
  projectKeywords ProjectKeyword[]
}

model User {
  id      Int       @id @default(autoincrement())
  name    String?
  email   String    @unique
  role    Role      @default(GESTOR)
  project Project[]
}

model Project {
  id         String @id @default(uuid()) @db.Uuid
  title      String           @db.VarChar(255)
  abstract   String?
  country    String           @db.VarChar(255)
  status     Status           @default(Seed)
  department String           @db.VarChar(255)
  creatorId  Int
  creator    User             @relation(fields: [creatorId], references: [id])
  keywords   ProjectKeyword[]
  values     Json?
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

model ProjectKeyword {
  projectId String @db.Uuid
  keywordId String @db.Uuid
  keyword   Keyword @relation(fields: [keywordId], references: [id], onDelete: Cascade)
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@id([projectId, keywordId])
}

enum Role {
  GESTOR
  ADMIN
}

enum Status {
  Seed
  InProgress
  Finished
  Canceled
}
